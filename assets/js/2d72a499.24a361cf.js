"use strict";(self.webpackChunkflutter_rust_bridge=self.webpackChunkflutter_rust_bridge||[]).push([[5587],{15680:(e,r,t)=>{t.d(r,{xA:()=>p,yg:()=>d});var n=t(96540);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=n.createContext({}),u=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},p=function(e){var r=u(e.components);return n.createElement(l.Provider,{value:r},e.children)},c={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),f=u(t),d=i,m=f["".concat(l,".").concat(d)]||f[d]||c[d]||a;return t?n.createElement(m,o(o({ref:r},p),{},{components:t})):n.createElement(m,o({ref:r},p))}));function d(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=f;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var u=2;u<a;u++)o[u]=t[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},63302:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var n=t(58168),i=(t(96540),t(15680));const a={},o="frb_override_* prefix",s={unversionedId:"guides/misc-features/override-prefix",id:"guides/misc-features/override-prefix",title:"frb_override_* prefix",description:"If a method name starts with frboverride,",source:"@site/docs/guides/misc-features/override-prefix.md",sourceDirName:"guides/misc-features",slug:"/guides/misc-features/override-prefix",permalink:"/flutter_rust_bridge/guides/misc-features/override-prefix",draft:!1,editUrl:"https://github.com/fzyzcjy/flutter_rust_bridge/tree/master/website/docs/guides/misc-features/override-prefix.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Ignoring things",permalink:"/flutter_rust_bridge/guides/misc-features/ignoring"},next:{title:"Run in build.rs",permalink:"/flutter_rust_bridge/guides/misc-features/build-rs"}},l={},u=[{value:"Example",id:"example",level:2}],p={toc:u};function c(e){let{components:r,...t}=e;return(0,i.yg)("wrapper",(0,n.A)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"frb_override_-prefix"},(0,i.yg)("inlineCode",{parentName:"h1"},"frb_override_*")," prefix"),(0,i.yg)("p",null,"If a method name starts with ",(0,i.yg)("inlineCode",{parentName:"p"},"frb_override_"),",\nthen it will be automatically recognized as if it does not have that prefix,\nand it gains privilege to override other existing methods (i.e. remove methods with same name)."),(0,i.yg)("p",null,"This is helpful when wanting to override existing methods,\nand also helpful when the name conflicts (such as in ",(0,i.yg)("inlineCode",{parentName:"p"},"#[ext]"),")."),(0,i.yg)("p",null,"We may extend this to other things as well in the future, such as struct names."),(0,i.yg)("h2",{id:"example"},"Example"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-rust"},"impl MyStruct {\n    pub fn frb_override_hello(&self, a: i32) -> i32 {}\n}\n")),(0,i.yg)("p",null,"Then it is equivalent to ",(0,i.yg)("inlineCode",{parentName:"p"},"fn hello(...)")," with privilege."))}c.isMDXComponent=!0}}]);