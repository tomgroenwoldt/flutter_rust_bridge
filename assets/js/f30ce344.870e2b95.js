"use strict";(self.webpackChunkflutter_rust_bridge=self.webpackChunkflutter_rust_bridge||[]).push([[385],{15680:(e,t,r)=>{r.d(t,{xA:()=>l,yg:()=>c});var n=r(96540);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function g(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var a=n.createContext({}),s=function(e){var t=n.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):g(g({},t),e)),r},l=function(e){var t=s(e.components);return n.createElement(a.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),d=s(r),c=o,b=d["".concat(a,".").concat(c)]||d[c]||p[c]||i;return r?n.createElement(b,g(g({ref:t},l),{},{components:r})):n.createElement(b,g({ref:t},l))}));function c(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,g=new Array(i);g[0]=d;var u={};for(var a in t)hasOwnProperty.call(t,a)&&(u[a]=t[a]);u.originalType=e,u.mdxType="string"==typeof e?e:o,g[1]=u;for(var s=2;s<i;s++)g[s]=r[s];return n.createElement.apply(null,g)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},27400:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>g,default:()=>p,frontMatter:()=>i,metadata:()=>u,toc:()=>s});var n=r(58168),o=(r(96540),r(15680));const i={},g="Debugging",u={unversionedId:"guides/how-to/debug",id:"guides/how-to/debug",title:"Debugging",description:"Debuggers",source:"@site/docs/guides/how-to/debug.md",sourceDirName:"guides/how-to",slug:"/guides/how-to/debug",permalink:"/flutter_rust_bridge/guides/how-to/debug",draft:!1,editUrl:"https://github.com/fzyzcjy/flutter_rust_bridge/tree/master/website/docs/guides/how-to/debug.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Stack Traces",permalink:"/flutter_rust_bridge/guides/how-to/stack-trace"},next:{title:"Logging",permalink:"/flutter_rust_bridge/guides/how-to/logging"}},a={},s=[{value:"Debuggers",id:"debuggers",level:2},{value:"Debugging by printing",id:"debugging-by-printing",level:2}],l={toc:s};function p(e){let{components:t,...r}=e;return(0,o.yg)("wrapper",(0,n.A)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"debugging"},"Debugging"),(0,o.yg)("h2",{id:"debuggers"},"Debuggers"),(0,o.yg)("p",null,"On one hand, Flutter code can be debugged.\nFlutter has ",(0,o.yg)("a",{parentName:"p",href:"https://docs.flutter.dev/testing/debugging"},"built-in support")," for using debuggers.\nFor example, you can run app ",(0,o.yg)("a",{parentName:"p",href:"https://docs.flutter.dev/tools/vs-code#run-app-with-breakpoints"},"with breakpoints"),".\nSince Rust is nothing but a compiled binary file (e.g. ",(0,o.yg)("inlineCode",{parentName:"p"},"something.so"),") added to Flutter,\nall Flutter utilities can be used as normal (for both native and web platform)."),(0,o.yg)("p",null,"On the other hand, Rust code can also be debugged.\nFor example, ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/fzyzcjy/flutter_rust_bridge/issues/2055#issuecomment-2181822181"},"here"),"\nis a demo to debug Rust code using VSCode,\nand ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/fzyzcjy/flutter_rust_bridge/issues/2055#issuecomment-2156639742"},"here"),"\nis another demo to debug using XCode."),(0,o.yg)("h2",{id:"debugging-by-printing"},"Debugging by printing"),(0,o.yg)("p",null,"Just use normal logging\nto ",(0,o.yg)("a",{parentName:"p",href:"https://stackoverflow.com/questions/189562/what-is-the-proper-name-for-doing-debugging-by-adding-print-statements"},"debug")," -\nthere is nothing special."),(0,o.yg)("p",null,"As for how to do logging:\nFor Dart, it is ",(0,o.yg)("inlineCode",{parentName:"p"},"print()"),".\nFor Rust, it is ",(0,o.yg)("inlineCode",{parentName:"p"},"info!() / warn!() / ...")," after ",(0,o.yg)("a",{parentName:"p",href:"./logging"},"configuring the loggers"),"."))}p.isMDXComponent=!0}}]);