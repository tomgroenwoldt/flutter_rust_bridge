"use strict";(self.webpackChunkflutter_rust_bridge=self.webpackChunkflutter_rust_bridge||[]).push([[943],{15680:(e,t,r)=>{r.d(t,{xA:()=>u,yg:()=>g});var n=r(96540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),d=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=d(r),g=a,y=p["".concat(l,".").concat(g)]||p[g]||c[g]||o;return r?n.createElement(y,i(i({ref:t},u),{},{components:r})):n.createElement(y,i({ref:t},u))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var d=2;d<o;d++)i[d]=r[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},25608:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var n=r(58168),a=(r(96540),r(15680));const o={},i="Extra Dart code",s={unversionedId:"guides/misc-features/dart-code",id:"guides/misc-features/dart-code",title:"Extra Dart code",description:"Arbitrary extra Dart code can be inserted into auto-generated Dart classes,",source:"@site/docs/guides/misc-features/dart-code.md",sourceDirName:"guides/misc-features",slug:"/guides/misc-features/dart-code",permalink:"/flutter_rust_bridge/guides/misc-features/dart-code",draft:!1,editUrl:"https://github.com/fzyzcjy/flutter_rust_bridge/tree/master/website/docs/guides/misc-features/dart-code.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Misc Features",permalink:"/flutter_rust_bridge/guides/misc-features/"},next:{title:"Preambles",permalink:"/flutter_rust_bridge/guides/misc-features/preambles"}},l={},d=[{value:"Example",id:"example",level:2},{value:"How to import things?",id:"how-to-import-things",level:2},{value:"Where to annotate the attribute?",id:"where-to-annotate-the-attribute",level:2},{value:"Impossible Dart Code",id:"impossible-dart-code",level:2},{value:"Possible Dart Code",id:"possible-dart-code",level:2},{value:"Works only if rust code is callable",id:"works-only-if-rust-code-is-callable",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}],u={toc:d};function c(e){let{components:t,...r}=e;return(0,a.yg)("wrapper",(0,n.A)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"extra-dart-code"},"Extra Dart code"),(0,a.yg)("p",null,"Arbitrary extra Dart code can be inserted into auto-generated Dart classes,\nby using the attribute ",(0,a.yg)("inlineCode",{parentName:"p"},"#[frb(dart_code = ...)]")," syntax."),(0,a.yg)("h2",{id:"example"},"Example"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},'#[frb(dart_code = "\n    int extraMethod() => a * 2;\n"\n)]\npub struct MyStruct {\n    ...\n}\n')),(0,a.yg)("p",null,"Then the generated Dart class will look like:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-dart"},"class MyStruct {\n  ... // other auto-generated code\n  \n  int extraMethod() => a * 2; // The extra code\n}\n")),(0,a.yg)("h2",{id:"how-to-import-things"},"How to import things?"),(0,a.yg)("p",null,"In order to ",(0,a.yg)("inlineCode",{parentName:"p"},"import")," things, simply write down the import statements besides normal code, and it will be automatically recognized and pasted."),(0,a.yg)("h2",{id:"where-to-annotate-the-attribute"},"Where to annotate the attribute?"),(0,a.yg)("p",null,"Currently, you can annotate the attribute only at rust ",(0,a.yg)("inlineCode",{parentName:"p"},"struct"),"s and ",(0,a.yg)("inlineCode",{parentName:"p"},"enum"),"s.\nIt doesn't work on ",(0,a.yg)("inlineCode",{parentName:"p"},"function"),"s, ",(0,a.yg)("inlineCode",{parentName:"p"},"mod"),"s or other elements, which are not translated into dart ",(0,a.yg)("inlineCode",{parentName:"p"},"classes"),"."),(0,a.yg)("p",null,"The dart code is ",(0,a.yg)("em",{parentName:"p"},"copied")," into the generated dart class, inside the scope of the rust element, which was annotated."),(0,a.yg)("p",null,"For example, if you annotate a ",(0,a.yg)("inlineCode",{parentName:"p"},"struct MyStruct")," in the rust file ",(0,a.yg)("inlineCode",{parentName:"p"},"minimal.rs"),", then the dart code will be inserted into the generated dart class ",(0,a.yg)("inlineCode",{parentName:"p"},"class MyStruct")," in the generated file ",(0,a.yg)("inlineCode",{parentName:"p"},"minimal.dart"),", inside this class definition."),(0,a.yg)("h2",{id:"impossible-dart-code"},"Impossible Dart Code"),(0,a.yg)("p",null,"Because the dart_code is inserted into the generated dart code from the rust element you annotated, the result must be valid dart code."),(0,a.yg)("p",null,"Thus a pure statement like ",(0,a.yg)("inlineCode",{parentName:"p"},"int a = 10;")," will not work as expected if inserted into a ",(0,a.yg)("inlineCode",{parentName:"p"},"struct"),", it needs to be a member field, like a variable or method/function."),(0,a.yg)("p",null,"For the same reason ",(0,a.yg)("inlineCode",{parentName:"p"},"extend")," doesn't work neither."),(0,a.yg)("h2",{id:"possible-dart-code"},"Possible Dart Code"),(0,a.yg)("p",null,"Any valid Dart Code for a class body is allowed in the ",(0,a.yg)("inlineCode",{parentName:"p"},"#[frb(dart_code =...)]"),". "),(0,a.yg)("h2",{id:"works-only-if-rust-code-is-callable"},"Works only if rust code is callable"),(0,a.yg)("p",null,"As usual, if a struct is not used by any functions, flutter_rust_bridge will automatically ignore it, avoiding generating useless structs.\nThis means that, at the current stage, your annotated rust struct needs to be callable by Dart - otherwise no code will be generated.\nThis may be improved in the future, i.e. auto detect such scenario and generate code for it (feel free to create an issue if this is needed for you!)."),(0,a.yg)("p",null,"You can achieve this in two ways: Having an additional rust function inside your struct:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},"#[frb(dart_code = \"static void dartSay() => print('Dart_code at struct');\")]\npub struct DartCodeStruct {}\n\nimpl DartCodeStruct {\n    pub fn noop() {}\n}\n")),(0,a.yg)("p",null,"or having another rust function using your rust struct as a parameter:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},"#[frb(dart_code = \"static void dartSay() => print('Dart_code at struct');\")]\npub struct DartCodeStruct {}\n\npub fn noop(dcs: DartCodeStruct) {}\n")),(0,a.yg)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,a.yg)("p",null,"You can see if the dart_code was inserted into the generated code (e.g. ",(0,a.yg)("inlineCode",{parentName:"p"},"myRustCode.dart"),") by looking into this file.\nIf you see the comment "),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-rust"},"// These types are ignored because they are not used by any `pub` functions: `MyStruct`\n")),(0,a.yg)("p",null,"then your rust code is not generated, thus no dart_code was inserted."),(0,a.yg)("p",null,"Another error could be that your dart_code is invalid.\nIf so you will get the error message: ",(0,a.yg)("inlineCode",{parentName:"p"},"stderr=Could not format because the source could not be parsed:")," when running the code generation."))}c.isMDXComponent=!0}}]);