"use strict";(self.webpackChunkflutter_rust_bridge=self.webpackChunkflutter_rust_bridge||[]).push([[8602],{15680:(e,t,r)=>{r.d(t,{xA:()=>c,yg:()=>g});var n=r(96540);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),l=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=l(r),g=o,h=p["".concat(u,".").concat(g)]||p[g]||d[g]||a;return r?n.createElement(h,i(i({ref:t},c),{},{components:r})):n.createElement(h,i({ref:t},c))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=p;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},78107:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=r(58168),o=(r(96540),r(15680));const a={},i="Stack Traces",s={unversionedId:"guides/how-to/stack-trace",id:"guides/how-to/stack-trace",title:"Stack Traces",description:"This is standard Rust behavior, and is unrelated to flutterrustbridge.",source:"@site/docs/guides/how-to/stack-trace.md",sourceDirName:"guides/how-to",slug:"/guides/how-to/stack-trace",permalink:"/flutter_rust_bridge/guides/how-to/stack-trace",draft:!1,editUrl:"https://github.com/fzyzcjy/flutter_rust_bridge/tree/master/website/docs/guides/how-to/stack-trace.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"How-to",permalink:"/flutter_rust_bridge/guides/how-to/"},next:{title:"Debugging",permalink:"/flutter_rust_bridge/guides/how-to/debug"}},u={},l=[{value:"Errors (<code>Result</code>)",id:"errors-result",level:2},{value:"Panics",id:"panics",level:2},{value:"Other solutions",id:"other-solutions",level:2},{value:"Behavior on Windows",id:"behavior-on-windows",level:2}],c={toc:l};function d(e){let{components:t,...r}=e;return(0,o.yg)("wrapper",(0,n.A)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"stack-traces"},"Stack Traces"),(0,o.yg)("admonition",{type:"tip"},(0,o.yg)("p",{parentName:"admonition"},'This is standard Rust behavior, and is unrelated to flutter_rust_bridge.\nHowever, we do provide defaults to be "battery included".'),(0,o.yg)("p",{parentName:"admonition"},"If using the template by ",(0,o.yg)("inlineCode",{parentName:"p"},"flutter_rust_bridge_codegen create/integrate"),", this is already configured by default,\nvia the auto-generated call to ",(0,o.yg)("inlineCode",{parentName:"p"},"flutter_rust_bridge::setup_default_user_utils()"),".")),(0,o.yg)("h2",{id:"errors-result"},"Errors (",(0,o.yg)("inlineCode",{parentName:"h2"},"Result"),")"),(0,o.yg)("p",null,"To pass Rust stack traces to flutter, you need to set ",(0,o.yg)("inlineCode",{parentName:"p"},"RUST_BACKTRACE")," in the running application. For that simply add ",(0,o.yg)("inlineCode",{parentName:"p"},'env::set_var("RUST_BACKTRACE", "1");')," before initialising the bridge."),(0,o.yg)("p",null,"Note: The ",(0,o.yg)("inlineCode",{parentName:"p"},"--dart-define")," will not work, you ",(0,o.yg)("strong",{parentName:"p"},"must")," use ",(0,o.yg)("inlineCode",{parentName:"p"},"env::set_var"),', because the former does not set the "environment variable" in the common sense, but instead a special thing only visible to Dart.'),(0,o.yg)("h2",{id:"panics"},"Panics"),(0,o.yg)("p",null,"The standard Rust does not provide stack traces when catching a panic.\nIf you want to know the stack traces, you can use approaches like\n",(0,o.yg)("a",{parentName:"p",href:"https://stackoverflow.com/questions/69593235/how-to-get-panic-information-i-e-stack-trace-with-catch-unwind"},"https://stackoverflow.com/questions/69593235/how-to-get-panic-information-i-e-stack-trace-with-catch-unwind"),".\nThe builtin utils do use it."),(0,o.yg)("h2",{id:"other-solutions"},"Other solutions"),(0,o.yg)("p",null,"There are many products to help you capture errors and provide a central panel to look at them.\n",(0,o.yg)("a",{parentName:"p",href:"https://docs.flutter.dev/cookbook/maintenance/error-reporting"},"This official Flutter page"),"\nlists some of them: Bugsnag, Datadog, Firebase Crashlytics, Rollbar, or Sentry.\nThis will be especially useful for your app in production."),(0,o.yg)("h2",{id:"behavior-on-windows"},"Behavior on Windows"),(0,o.yg)("p",null,"It seems that Rust+Windows(+Flutter) does not handle stack traces well,\nwhich is not a bug of flutter_rust_bridge, but something on upstream."),(0,o.yg)("p",null,"The current discussions and workarounds are in ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/fzyzcjy/flutter_rust_bridge/issues/2200"},"https://github.com/fzyzcjy/flutter_rust_bridge/issues/2200"),"."))}d.isMDXComponent=!0}}]);