"use strict";(self.webpackChunkflutter_rust_bridge=self.webpackChunkflutter_rust_bridge||[]).push([[7933],{15680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>d});var r=n(96540);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),g=s(n),d=i,m=g["".concat(u,".").concat(d)]||g[d]||c[d]||a;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=g;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},62993:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=n(58168),i=(n(96540),n(15680));const a={},o="Integrating with Web",l={unversionedId:"manual/integrate/existing/web",id:"manual/integrate/existing/web",title:"Integrating with Web",description:"Refer to the Web setup page for required installables.",source:"@site/docs/manual/integrate/06-existing/06-web.md",sourceDirName:"manual/integrate/06-existing",slug:"/manual/integrate/existing/web",permalink:"/flutter_rust_bridge/manual/integrate/existing/web",draft:!1,editUrl:"https://github.com/fzyzcjy/flutter_rust_bridge/tree/master/website/docs/manual/integrate/06-existing/06-web.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Integrating with Windows and Linux",permalink:"/flutter_rust_bridge/manual/integrate/existing/desktop"},next:{title:"Using the dynamic library",permalink:"/flutter_rust_bridge/manual/integrate/existing/usage"}},u={},s=[],p={toc:s};function c(e){let{components:t,...n}=e;return(0,i.yg)("wrapper",(0,r.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"integrating-with-web"},"Integrating with Web"),(0,i.yg)("p",null,"Refer to the ",(0,i.yg)("a",{parentName:"p",href:"../template/setup/web"},"Web setup")," page for required installables."),(0,i.yg)("p",null,"Once you have installed the required dependencies, you will need to create a wrapper\nto consume the bridge files. In the case of ",(0,i.yg)("inlineCode",{parentName:"p"},"DynamicLibrary"),"\nyou only needed to supply the path to the binary,\nbut to import a WASM module you need to:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Create a script tag to the JS file generated by ",(0,i.yg)("inlineCode",{parentName:"li"},"wasm_bindgen")," and insert it into the document;"),(0,i.yg)("li",{parentName:"ul"},"Invoke the ",(0,i.yg)("inlineCode",{parentName:"li"},"wasmModule")," initializer defined in the\nweb bridge;"),(0,i.yg)("li",{parentName:"ul"},"And finally, create the implementation class.")),(0,i.yg)("p",null,"Create a Dart file and copy these lines to it:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-dart"},"import 'bridge_generated.web.dart';\nexport 'bridge_definitions.dart';\n\nimport 'dart:html';\n\n// Path to the wasm_bindgen generated files\nconst root = 'pkg/native';\nfinal api = NativeImpl.wasm(WasmModule.initialize(\n    kind: const Modules.noModules(root: root),\n));\n")))}c.isMDXComponent=!0}}]);